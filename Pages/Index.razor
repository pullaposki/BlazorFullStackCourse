@page "/"
<BlazorApp1.Components.NewItemSetupComponent OnProductSubmit="@( async (param) => await InsertNewProduct(param))"></BlazorApp1.Components.NewItemSetupComponent>

<table>
	<thead>
		<tr>
			<td>ID</td>
			<td>Asking Price</td>
			<td>Units</td>
			<td>Total</td>			
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Products)
		{
			<tr>
				<!--For each item in Products, a ListItemComponent is created with a ListProduct parameter set to the current item.-->
				<td><BlazorApp1.Components.ListItemComponent ListProduct="@item"></BlazorApp1.Components.ListItemComponent></td>
				<td><BlazorApp1.Components.ModifyItemComponent OnModifyProduct="@( async () => await Modify())"></BlazorApp1.Components.ModifyItemComponent></td>
			</tr>
		}
	</tbody>
</table>

@code
{
	List<DataModels.Product> Products = new List<DataModels.Product>();

	DataModels.Product _savedProduct;

	Task InsertNewProduct(DataModels.Product product)
	{
		Products.Add(product);
		SaveProduct(product);
		return Task.CompletedTask;
	}

	void SaveProduct(DataModels.Product product)
	{
		_savedProduct = product;
		Console.WriteLine("product saved: " + product.Id);
	}

	Task Modify()
	{
		if(_savedProduct == null)
		{
			Console.WriteLine("No saved product");
			return Task.CompletedTask;
		}

		
		Console.WriteLine("Open product for modification : " + _savedProduct.Id);
		return Task.CompletedTask;
	}
}