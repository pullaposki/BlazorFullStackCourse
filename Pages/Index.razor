@page "/"
<BlazorApp1.Components.ModifyItemComponent @ref="_modifyItemComponent" OnChange="Refresh"></BlazorApp1.Components.ModifyItemComponent>
<BlazorApp1.Components.NewItemSetupComponent OnProductSubmit="@( async (param) => await InsertNewProduct(param))"></BlazorApp1.Components.NewItemSetupComponent>

<table>
	<thead>
		<tr>
			<td>ID</td>
			<td>Asking Price</td>
			<td>Units</td>
			<td>Total</td>			
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Products)
		{
			<tr>
					<BlazorApp1.Components.ListItemComponent ListProduct="@item"></BlazorApp1.Components.ListItemComponent>
				<td>
					<p><button @onclick="@( async () => await ModifyAsync(item))">Modify</button></p>
				</td>
			</tr>
		}
	</tbody>
</table>


@code
{
	void Refresh()
	{
		Console.WriteLine("refresh run");
		StateHasChanged();
	}

	Components.ModifyItemComponent _modifyItemComponent;


	DataModels.Product GetRightProduct(DataModels.Product product)
	{
		foreach (var item in ListOfModifiableProducts)
		{
			if (item == product)
			{
				return item;
			}
		}
		Console.WriteLine("Product not found : " + product.Id);
		return _emptyProduct;
	}


	List<DataModels.Product> Products = new List<DataModels.Product>();
	List<DataModels.Product> ListOfModifiableProducts = new List<DataModels.Product>();

	DataModels.Product _emptyProduct = new DataModels.Product();



	Task InsertNewProduct(DataModels.Product product)
	{
		Products.Add(product);
		ListOfModifiableProducts.Add(product);
		return Task.CompletedTask;
	}

	// Task Modify(DataModels.Product product)
	// {
	// 	var selectedProduct = GetRightProduct(product);
	// 	_modifyItemComponent.ModifyAsync(selectedProduct);
	// 	Console.WriteLine("product selected: " + selectedProduct);
	// 	return Task.CompletedTask;
	// }

	async Task ModifyAsync(DataModels.Product product)
	{
		var selectedProduct = GetRightProduct(product);
		await _modifyItemComponent.ModifyAsync(selectedProduct);
		Console.WriteLine("product selected: " + selectedProduct);
	}

}